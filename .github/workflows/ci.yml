name: CI
on:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize]

jobs:

  build:
    name: build and test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    env:
      BUILDER_NAME: "GitHub Actions"
      BUILDER_EMAIL: noreply@actions.github.com

    steps:

    - name: Set up Go
      uses: actions/setup-go@v6
      with:
        go-version: 1.25
      id: go

    - name: Check out code
      uses: actions/checkout@v5
      with:
        fetch-depth: 1

    - name: Install gofumpt
      if: matrix.os == 'ubuntu-latest'
      run: go install mvdan.cc/gofumpt@latest
      shell: bash

    - name: Run gofumpt check
      if: matrix.os == 'ubuntu-latest'
      run: |
        UNFORMATTED=$(gofumpt -l .)
        if [ -n "$UNFORMATTED" ]; then
          echo "The following files are not gofumpt-formatted:"
          echo "$UNFORMATTED"
          echo "Run 'gofumpt -w .' locally to fix formatting."
          exit 1
        fi
      shell: bash

    - name: Install dependencies (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        choco install -y make sed
        choco install -y pandoc --version 2.7.3

    - name: Install dependencies (Linux/Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo wget https://github.com/jgm/pandoc/releases/download/2.7.3/pandoc-2.7.3-1-amd64.deb
        sudo dpkg -i pandoc-2.7.3-1-amd64.deb

    - name: Build and run unit tests
      run: make clean all test
      shell: bash

    - name: Run checkmake on Makefile
      run: ./checkmake Makefile
      shell: bash

